--Creating database
CREATE DATABASE CollegeWorks;
USE CollegeWorks;

--Create a table 
CREATE TABLE TABLEKEY 
(
  COLUMNNAMES VARCHAR(255) NOT NULL,
  PRIMARY KEY (COLUMNNAMES)
);
CREATE TABLE TABLENAME 
(
  COLUMNNAMES VARCHAR(255),
  COLUMNNAMES2 INT UNIQUE,
  COLUMNNAMES3  DATE NOT NULL,
  COLUMNNAMES4 FLOAT,
  COLUMNNAMES5 BOOLEAN,
  COLUMNNAMES6 ENUM(1, 0),
  FOREIGN KEY(COLUMNAMES2) REFERENCES TABLEKEY(COLUMNNAMES) ON DELETE CASCADE ON UPDATE CASCADE);

--Insert a value
INSERT INTO TABLENAME (COLUMNNAMES, COLUMNNAMES2, COLUMNNAMES3, COLUMNNAMES4, COLUMNNAMES5, COLUMNNAMES6) VALUES ('value1', 123, '2023-10-01', 45.67, TRUE, 1);
INSERT INTO TABLENAME VALUES ('value1', 123, '2023-10-01', 45.67, TRUE, 1);

--Rename a table
ALTER TABLE TABLENAME RENAME TO NEWTABLENAME;

--Alter a table
ALTER TABLE TABLENAME ADD EXTRACOLUMN VARCHAR(255);
-- Change column type or size
ALTER TABLE TABLENAME MODIFY EXTRACOLUMN VARCHAR(50) NOT NULL;  

--Drop a column
ALTER TABLE TABLENAME DROP COLUMN EXTRACOLUMN;

--Select a column
SELECT COLUMNNAMES FROM TABLENAME WHERE COLUMNNAMES2 = 123;

--Update a value
UPDATE TABLENAME SET COLUMNNAMES = 'new_value' WHERE COLUMNNAMES2 = 123;

--Delete a value
DELETE FROM TABLENAME WHERE COLUMNNAMES2 = 123;

--Create a view
CREATE VIEW VIEWNAMES AS SELECT COLUMNNAMES FROM TABLENAME ORDER BY COLUMNNAMES2 DESC;
SELECT * FROM VIEWNAMES;

--Functions 
SELECT COUNT(*) FROM TABLENAME ;
SELECT MAX(COLUMNNAMES2) FROM TABLENAME;
SELECT COUNT(COLUMNNAMES) FROM TABLENAME WHERE COLUMNNAMES5 = TRUE;
SELECT DISTINCT(COLUMNNAMES) FROM TABLENAME;
SELECT AVG(COLUMNNAMES4) FROM TABLENAME;
SELECT SUM(COLUMNNAMES4) FROM TABLENAME;


--Create a user
CREATE USER 'username'@'localhost' IDENTIFIED BY 'NICKNAME';

--Grant privileges
GRANT UPDATE,SELECT,DELETE PRIVILEGES ON TABLENAME TO 'NICKNAME';

--Revoke privileges
REVOKE UPDATE,SELECT,DELETE PRIVILEGES ON TABLENAME FROM 'NICKNAME';

--Show privileges
SHOW GRANTS FOR 'username'@'localhost';

--Describe a table
DESCRIBE TABLENAME;

--Using like predicate
SELECT * FROM TABLENAME WHERE COLUMNNAMES LIKE 'A___A';

--Using IN predicate
SELECT * FROM TABLENAME WHERE COLUMNNAMES2 IN (123, 456, 789);

--Using NOT IN predicate
SELECT * FROM TABLENAME WHERE COLUMNNAMES2 NOT IN (123, 456, 789);

--using BETWEEN predicate
SELECT * FROM TABLENAME WHERE COLUMNNAMES3 BETWEEN '2023-01-01' AND '2023-12-31';

--Using ORDER BY
SELECT * FROM TABLENAME ORDER BY COLUMNNAMES2 DESC;

--Using GROUP BY
SELECT COLUMNNAMES FROM TABLENAME GROUP BY COLUMNNAMES;

--Using HAVING
SELECT COLUMNNAMES, COUNT(*) FROM TABLENAME GROUP BY COLUMNNAMES HAVING COUNT(*) > 1;

--Showing all tables
SHOW TABLE;
--Showing all databases
SHOW DATABASE;

--Using limit
SELECT * FROM TABLENAME LIMIT 1,2;

--Combining tables into one query 
SELECT * FROM TABLEKEY T1, TABLENAME T2 WHERE T1.COLUMNNAMES = T2.COLUMNNAMES;

--Using joins
SELECT * FROM TABLEKEY T1 INNER JOIN TABLENAME T2 ON T1.COLUMNNAMES = T2.COLUMNNAMES;
SELECT * FROM TABLEKEY T1 LEFT JOIN TABLENAME T2 ON T1.COLUMNNAMES = T2.COLUMNNAMES;
SELECT * FROM TABLEKEY T1 RIGHT JOIN TABLENAME T2 ON T1.COLUMNNAMES = T2.COLUMNNAMES;
SELECT * FROM TABLEKEY T1 FULL OUTER JOIN TABLENAME T2 ON T1.COLUMNNAMES = T2.COLUMNNAMES;
SELECT * FROM TABLEKEY T1 CROSS JOIN TABLENAME T2;

--Using subqueries
SELECT * FROM TABLENAME WHERE COLUMNNAMES2 IN (SELECT COLUMNNAMES2 FROM TABLEKEY WHERE COLUMNNAMES = 'value1');
SELECT * FROM TABLENAME WHERE COLUMNNAMES2 = (SELECT MAX(COLUMNNAMES2) FROM TABLEKEY);

--Using procedures
DELIMITER $$
CREATE PROCEDURE GetValues(IN inputValue INT, OUT inputvalue VARCHAR(255))
BEGIN
  DECLARE result VARCHAR(255);
  SELECT * INTO inputvalue FROM TABLENAME WHERE COLUMNNAMES2 = inputValue;

  --IF/IFF CONDITIONS 
  IF inpuvalue <10 THEN                                  
    SET result = 'Value is less than 10';
  ELSEIF inputValue >= 10 AND inputValue < 20 THEN
    SET result = 'Value is between 10 and 20';
  ELSEIF inputValue >= 20 THEN
    SET result = 'Value is 20 or more';
  END IF;

  --SWITCH CASE CONDITIONS
  CASE inputvalue                                        
    WHEN 0 THEN SET result = 'Value is zero';
    WHEN 1 THEN SET result = 'Value is one';
    WHEN 2 THEN SET result = 'Value is two';
    ELSE SET result = 'Value is something else';
  END CASE;

  --CURSOR METHOD
DECLARE C CURSOR FOR SELECT COLUMNNAMES FROM TABLENAME WHERE COLUMNNAMES2 = inputValue;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET inputvalue = 1;
OPEN C;
FETCH C INTO inputvalue;
CLOSE C;

--LOOPING
X:LOOP
LEAVE X;
END LOOP X;

  UPDATE TABLENAME SET COLUMNNAMES = result WHERE COLUMNNAMES2 = inputValue;
END $$
DELIMITER ;

CALL GetValues(123, @outputValue);